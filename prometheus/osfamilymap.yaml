# -*- coding: utf-8 -*-                                                                                             
# vim: ft=yaml
#
# Setup variables using grains['os_family'] based logic.
# You just need to add the key:values for an `os_family` that differ
# from `defaults.yaml`.
# Only add an `os_family` which is/will be supported by the formula
#
# If you do not need to provide defaults via the `os_family` grain,
# you will need to provide at least an empty dict in this file, e.g.
# osfamilymap: {}
---
{%- if grains.os == 'MacOS' %}
  {% set macos_group = salt['cmd.run']("stat -f '%Sg' /dev/console") %}
{%- endif %}

Debian:
  args_file: /etc/default/prometheus
  exporters:
    node:
      config_file: /etc/default/prometheus-node-exporter

RedHat: {}

Suse: {}

Gentoo: {}

Arch: {}

Alpine: {}

FreeBSD:
  rootgroup: wheel
  config_file: /usr/local/etc/prometheus.yml
  exporters:
    node:
      pkg:
        name: node_exporter
      service: node_exporter

OpenBSD:
  rootgroup: wheel

Solaris: {}

Windows:
  pkg:
    archive:
      name: C:\\Program Files
      source: https://github.com/prometheus/prometheus/releases/download/v2.10.0/prometheus-2.10.0.windows-amd64.tar.gz
      source_hash: eb138082a4d5e4d5b1e3ca838fa508f053474d46bca76e87ab0834f0d8b110db

MacOS:
  pkg:
    archive:
      name: /opt
      source: https://github.com/prometheus/prometheus/releases/download/v2.10.0/prometheus-2.10.0.darwin-amd64.tar.gz
      source_hash: 740e36bcacc0c5d4495f5341fcfa8b7e0dc623d12e8b07ac291052ea0a681325
  rootgroup: {{ macos_group | d('') }}
